{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name list.actions-panel.panel, :imports nil, :requires {accountant accountant.core, accountant.core accountant.core, re-frame re-frame.core, re-frame.core re-frame.core}, :uses nil, :defs {panel-style {:name list.actions-panel.panel/panel-style, :file "src\\cljs\\list\\actions-panel\\panel.cljs", :line 8, :column 1, :end-line 8, :end-column 17, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\actions-panel\\panel.cljs", :line 8, :column 6, :end-line 8, :end-column 17}, :tag cljs.core/IMap}, action-style {:name list.actions-panel.panel/action-style, :file "src\\cljs\\list\\actions-panel\\panel.cljs", :line 11, :column 1, :end-line 11, :end-column 18, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\actions-panel\\panel.cljs", :line 11, :column 6, :end-line 11, :end-column 18}, :tag cljs.core/IMap}, view {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\actions-panel\\panel.cljs", :line 20, :column 7, :end-line 20, :end-column 11, :arglists (quote ([]))}, :name list.actions-panel.panel/view, :variadic false, :file "src\\cljs\\list\\actions-panel\\panel.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:clear-filter :color :cursor :on-click :style :div :marginBottom :fontSize :marginRight :span}, :order [:marginBottom :fontSize :cursor :color :marginRight :div :style :span :on-click :clear-filter]}, :doc nil}