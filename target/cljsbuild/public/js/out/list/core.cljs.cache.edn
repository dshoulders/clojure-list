{:rename-macros {}, :renames {}, :externs {document {getElementById {}}}, :use-macros {}, :excludes #{}, :name list.core, :imports nil, :requires {list.views list.views, list.firebase list.firebase, reagent reagent.core, views list.views, list.events list.events, reagent.core reagent.core, routes list.routes, list.routes list.routes, list.subs list.subs, fb list.firebase, re-frame re-frame.core, re-frame.core re-frame.core}, :uses {atom reagent.core}, :defs {firebase-config {:name list.core/firebase-config, :file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\core.cljs", :line 13, :column 1, :end-line 13, :end-column 25, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\core.cljs", :line 13, :column 10, :end-line 13, :end-column 25}, :tag object}, mount-root {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\core.cljs", :line 21, :column 7, :end-line 21, :end-column 17, :arglists (quote ([]))}, :name list.core/mount-root, :variadic false, :file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init! {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\core.cljs", :line 27, :column 7, :end-line 27, :end-column 12, :arglists (quote ([]))}, :name list.core/init!, :variadic false, :file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:initialize-db}, :order [:initialize-db]}, :doc nil}