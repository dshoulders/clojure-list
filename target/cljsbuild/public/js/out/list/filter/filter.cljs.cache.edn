{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name list.filter.filter, :imports nil, :requires {text-filter list.filter.text-filter, list.filter.text-filter list.filter.text-filter, tag-filter list.filter.tag-filter, list.filter.tag-filter list.filter.tag-filter}, :uses nil, :defs {view {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\filter\\filter.cljs", :line 5, :column 7, :end-line 5, :end-column 11, :arglists (quote ([]))}, :name list.filter.filter/view, :variadic false, :file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\filter\\filter.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:div}, :order [:div]}, :doc nil}