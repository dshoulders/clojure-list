{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name list.filter.tag-filter, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, base-styles list.styles.base-styles, list.styles.base-styles list.styles.base-styles}, :uses nil, :defs {filter-styles {:name list.filter.tag-filter/filter-styles, :file "src\\cljs\\list\\filter\\tag-filter.cljs", :line 8, :column 1, :end-line 8, :end-column 19, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\filter\\tag-filter.cljs", :line 8, :column 6, :end-line 8, :end-column 19}, :tag cljs.core/IMap}, deselected-tag-styles {:name list.filter.tag-filter/deselected-tag-styles, :file "src\\cljs\\list\\filter\\tag-filter.cljs", :line 13, :column 1, :end-line 13, :end-column 27, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\filter\\tag-filter.cljs", :line 13, :column 6, :end-line 13, :end-column 27}, :tag any}, selected-tag-styles {:name list.filter.tag-filter/selected-tag-styles, :file "src\\cljs\\list\\filter\\tag-filter.cljs", :line 19, :column 1, :end-line 19, :end-column 25, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\filter\\tag-filter.cljs", :line 19, :column 6, :end-line 19, :end-column 25}, :tag any}, all-tags {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\filter\\tag-filter.cljs", :line 27, :column 7, :end-line 27, :end-column 15, :arglists (quote ([items]))}, :name list.filter.tag-filter/all-tags, :variadic false, :file "src\\cljs\\list\\filter\\tag-filter.cljs", :end-column 15, :method-params ([items]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([items]))}, clean-tags {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\filter\\tag-filter.cljs", :line 34, :column 7, :end-line 34, :end-column 17, :arglists (quote ([tags]))}, :name list.filter.tag-filter/clean-tags, :variadic false, :file "src\\cljs\\list\\filter\\tag-filter.cljs", :end-column 17, :method-params ([tags]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tags]))}, view {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\filter\\tag-filter.cljs", :line 37, :column 7, :end-line 37, :end-column 11, :arglists (quote ([]))}, :name list.filter.tag-filter/view, :variadic false, :file "src\\cljs\\list\\filter\\tag-filter.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:search-tag :flexWrap :color :marginTop :on-click :style :div :notes :marginBottom :display :items :marginRight}, :order [:marginBottom :display :flexWrap :marginRight :marginTop :color :notes :items :search-tag :div :style :on-click]}, :doc nil}