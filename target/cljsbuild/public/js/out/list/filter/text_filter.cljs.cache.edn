{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name list.filter.text-filter, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, base-styles list.styles.base-styles, list.styles.base-styles list.styles.base-styles}, :uses nil, :defs {view {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\filter\\text-filter.cljs", :line 5, :column 7, :end-line 5, :end-column 11, :arglists (quote ([]))}, :name list.filter.text-filter/view, :variadic false, :file "src\\cljs\\list\\filter\\text-filter.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:placeholder :value :style :input :on-input :search-text}, :order [:search-text :input :style :on-input :value :placeholder]}, :doc nil}