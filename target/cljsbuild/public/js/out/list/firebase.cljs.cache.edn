{:rename-macros {}, :renames {}, :externs {firebase {database {}, initializeApp {}}, Object {ref {}, child {}, push {}, key {}, once {}, set {}, then {}, remove {}}}, :use-macros {}, :excludes #{}, :name list.firebase, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core}, :uses nil, :defs {list-address {:name list.firebase/list-address, :file "src\\cljs\\list\\firebase.cljs", :line 5, :column 1, :end-line 5, :end-column 18, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\firebase.cljs", :line 5, :column 6, :end-line 5, :end-column 18}, :tag string}, to-list {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\firebase.cljs", :line 7, :column 7, :end-line 7, :end-column 14, :arglists (quote ([items]))}, :name list.firebase/to-list, :variadic false, :file "src\\cljs\\list\\firebase.cljs", :end-column 14, :method-params ([items]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([items]))}, get-new-id {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\firebase.cljs", :line 12, :column 7, :end-line 12, :end-column 17, :arglists (quote ([]))}, :name list.firebase/get-new-id, :variadic false, :file "src\\cljs\\list\\firebase.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init-firebase {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\firebase.cljs", :line 19, :column 7, :end-line 19, :end-column 20, :arglists (quote ([config]))}, :name list.firebase/init-firebase, :variadic false, :file "src\\cljs\\list\\firebase.cljs", :end-column 20, :method-params ([config]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([config]))}, receive-items {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\firebase.cljs", :line 22, :column 7, :end-line 22, :end-column 20, :arglists (quote ([items]))}, :name list.firebase/receive-items, :variadic false, :file "src\\cljs\\list\\firebase.cljs", :end-column 20, :method-params ([items]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([items]))}, get-items {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\firebase.cljs", :line 27, :column 7, :end-line 27, :end-column 16, :arglists (quote ([]))}, :name list.firebase/get-items, :variadic false, :file "src\\cljs\\list\\firebase.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, save-item {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\firebase.cljs", :line 35, :column 7, :end-line 35, :end-column 16, :arglists (quote ([item-data]))}, :name list.firebase/save-item, :variadic false, :file "src\\cljs\\list\\firebase.cljs", :end-column 16, :method-params ([item-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([item-data]))}, update-item {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\firebase.cljs", :line 49, :column 7, :end-line 49, :end-column 18, :arglists (quote ([item]))}, :name list.firebase/update-item, :variadic false, :file "src\\cljs\\list\\firebase.cljs", :end-column 18, :method-params ([item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([item]))}, remove-item {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\firebase.cljs", :line 57, :column 7, :end-line 57, :end-column 18, :arglists (quote ([item]))}, :name list.firebase/remove-item, :variadic false, :file "src\\cljs\\list\\firebase.cljs", :end-column 18, :method-params ([item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([item]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:add-item :remove-item :visible-item-ids :update-item :id :items :receive-items :keywordize-keys}, :order [:visible-item-ids :id :items :receive-items :keywordize-keys :add-item :update-item :remove-item]}, :doc nil}