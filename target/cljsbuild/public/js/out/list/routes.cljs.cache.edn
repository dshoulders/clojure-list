{:rename-macros {}, :renames {}, :use-macros {defroute secretary.core}, :excludes #{}, :name list.routes, :imports nil, :requires {secretary secretary.core, secretary.core secretary.core, accountant accountant.core, accountant.core accountant.core, re-frame re-frame.core, re-frame.core re-frame.core}, :uses nil, :defs {hook-browser-navigation! {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\routes.cljs", :line 7, :column 7, :end-line 7, :end-column 31, :arglists (quote ([]))}, :name list.routes/hook-browser-navigation!, :variadic false, :file "src\\cljs\\list\\routes.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, app-routes {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\routes.cljs", :line 17, :column 7, :end-line 17, :end-column 17, :arglists (quote ([]))}, :name list.routes/app-routes, :variadic false, :file "src\\cljs\\list\\routes.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {secretary.core secretary.core, secretary secretary.core}, :cljs.analyzer/constants {:seen #{:path-exists? :home :set-page :id :nav-handler :item-edit}, :order [:nav-handler :path-exists? :set-page :home :item-edit :id]}, :doc nil}