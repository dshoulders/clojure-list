{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name list.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, base-styles list.styles.base-styles, list.styles.base-styles list.styles.base-styles, item-browser list.items.browser, list.items.browser list.items.browser, item-edit list.items.edit, list.items.edit list.items.edit}, :uses nil, :defs {layout-style {:name list.views/layout-style, :file "src\\cljs\\list\\views.cljs", :line 11, :column 1, :end-line 11, :end-column 18, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\views.cljs", :line 11, :column 6, :end-line 11, :end-column 18}, :tag cljs.core/IMap}, pages {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\views.cljs", :line 21, :column 7, :end-line 21, :end-column 12, :arglists (quote ([[page-name params]]))}, :name list.views/pages, :variadic false, :file "src\\cljs\\list\\views.cljs", :end-column 12, :method-params ([p__35266]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[page-name params]]))}, layout {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\views.cljs", :line 28, :column 7, :end-line 28, :end-column 13, :arglists (quote ([route]))}, :name list.views/layout, :variadic false, :file "src\\cljs\\list\\views.cljs", :end-column 13, :method-params ([route]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([route]))}, page-selector {:protocol-inline nil, :meta {:file "C:\\Users\\dshou\\Sandbox\\clojure\\list\\src\\cljs\\list\\views.cljs", :line 32, :column 7, :end-line 32, :end-column 20, :arglists (quote ([]))}, :name list.views/page-selector, :variadic false, :file "src\\cljs\\list\\views.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:color :maxWidth :page :style :div :fontFamily :id :padding :margin}, :order [:maxWidth :margin :padding :fontFamily :color :id :div :style :page]}, :doc nil}